library(magick)
library(broman)
library(dplyr)
library(ggplot2)

#cb <- image_read("/Users/carlborstell/Downloads/TU-0fLGM_400x400.jpg")
cb <- image_read("/Users/carlborstell/Downloads/cb.png")
cb
cb <- image_background(cb, "black")
cb
cb <- image_scale(cb, geometry="100x100")
cb <- image_channel(cb)
cb
cb_raster <- as.raster(cb)
#cb_raster[1,1]
am <- image_read("https://upload.wikimedia.org/wikipedia/en/5/55/Barack_Obama_Hope_poster.jpg")
am <- image_scale(am, geometry = "100x")
am <- image_background(am, "black")
am <- image_channel(am)
am
cb_raster <- as.raster(am)

#cb3 <- matrix(nrow = 400, ncol = 400)
#substr("#595959ff", 2, 7)
threeify <- function(color) {
  dec <- hex2dec(substr(color, 2,7))
  #ifelse(dec > 11382189, 2, ifelse(dec > 5855577, 1, 0))
  ifelse(dec == 0, NA, ifelse(dec > 9539985, 3, ifelse(dec > 5855577, 2, 1)))
  #ifelse(dec == 0, NA, ifelse(dec > 3*4194304, 3, ifelse(dec > 2*4194304, 2, ifelse(dec > 4194304, 1, 0))))
}

binnify <- function(color) {
  dec <- hex2dec(substr(color, 2,7))
  #ifelse(dec > 11382189, 2, ifelse(dec > 5855577, 1, 0))
  ifelse(dec == 0, NA, ifelse(dec > 9539985, 2, ifelse(dec > 5855577, 1, 0)))
  #ifelse(dec == 0, NA, ifelse(dec > 3*4194304, 3, ifelse(dec > 2*4194304, 2, ifelse(dec > 4194304, 1, 0))))
}

2*4194304
4*4194304/3
#cb_raster[240:264]
#threeify(cb_raster[240,254])
hex2dec("ffffff")/4

xs <- c()
ys <- c()
cols <- c()
colz <- c()

for (y in 1:nrow(cb_raster)) {
  for (x in 1:ncol(cb_raster)){
    xs <- c(xs, x)
    ys <- c(ys, nrow(cb_raster)-y)
    cols <- c(cols, threeify(cb_raster[y,x]))
    colz <- c(colz, hex2dec(substr(cb_raster[y,x], 2,7)))
  }
}
data <- NULL
data <- data.frame(x=xs, y=ys, color=cols, clr=colz)

data <- data %>%
  mutate(bin = cut(colz, breaks=seq(0, hex2dec("ffffff"), length.out = 4),
                   include.lowest=FALSE, labels=1:3))
#seq(0, hex2dec("ffffff"), length.out = 4)
#?quantile
ggplot(data) +
  #geom_rect(aes(xmin=-5, xmax=68, ymin=-5, ymax=106), fill="#2C68A2") +
  geom_tile(aes(x=x, y=y, fill=factor(color))) +
  scale_fill_manual(breaks=c(1,2,3), labels=c("1","2","3"), values=get_custom_palette("US",n=3), guide=FALSE) +
  #scale_fill_manual(breaks=c(0,1,2), labels=c("0","1","2"), values=c("#2C68A2", "#7C92A1", "#F6CE46"), guide=FALSE) +
  #scale_fill_manual(breaks=c(0,1,2,3), labels=c("0","1","2", "3"), values=c("#11304D", "#C6322E", "#7A949F", "#F9E4AF"), guide=FALSE) +
  #scale_fill_manual(values=wes_palette(16,3)) +
  coord_fixed() +
  theme_void()

ggplot(data) +
  #geom_rect(aes(xmin=-5, xmax=68, ymin=-5, ymax=106), fill="#2C68A2") +
  geom_tile(aes(x=x, y=y, fill=factor(color))) +
  scale_fill_manual(breaks=c(0,1,2), labels=c("0","1","2"), values=sort(cc[cc$iso3=="TTO",]$palette[[1]]), guide=FALSE) +
  #scale_fill_manual(breaks=c(0,1,2), labels=c("0","1","2"), values=c("#2C68A2", "#7C92A1", "#F6CE46"), guide=FALSE) +
  #scale_fill_manual(breaks=c(0,1,2,3), labels=c("0","1","2", "3"), values=c("#11304D", "#C6322E", "#7A949F", "#F9E4AF"), guide=FALSE) +
  #scale_fill_manual(values=wes_palette(16,3)) +
  coord_fixed() +
  theme_void()

library(hash)
flags <- hash()
flags["Sweden"] <- c("#2C68A2", "#7C92A1", "#F6CE46")
(values(flags["Sweden"])[,1])[1:2]
